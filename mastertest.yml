resources:
  - name: connecting_resource
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2

  - name: ns_aql
    type: Aql
    configuration:
      sourceArtifactory: art_v
      query: 'items.find({"$and":[{"artifact.module.build.name":{"$eq":"native_pipeline"}},{"artifact.module.build.number":{"$eq":"8"}}]})'     
      #addedProperties:
      mappings:
        - name: "a"
          input: "regex"
          output: "$1/$2"
        - name: "b"
          input: "regex"
          output: "$2/$1"
          
  - name: nsdocker_image
    type: Image
    configuration:
      imageName: shippabledocker/jfreq
      registry: docker_v
      autoPull: true
      imageTag: latest
      
  - name: ns_dockerbuild_gitRepo
    type: GitRepo
    configuration:
      path: vishnurao12/sample-script
      gitProvider: git_v
      branches: 
        include: master

  - name: ns_buildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art_v
      buildName: master_test_buildInfo
      buildNumber: 123
  
  - name: ns_promotedInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art_v
      buildName: master_test_promotedInfo
      buildNumber: 1

# need to add git_v,art_v,docker_v integration. 
# need to add these repo docker-local,test-generic-local repo
pipelines:
  - name: Master_test_pipe
#       configuration:
#         nodePool: win_2019
    steps:
      - name: Upload_to_artifactory
        type: Bash
        configuration:
          integrations:
            - name: art_v
          inputResources:
            - name: connecting_resource
        execution:
          onExecute:
            - echo automation > test.sh
            - jfrog rt u test.sh example-repo-local/setup/test.sh --insecure-tls

      - name: To_build_Docker_Image
        type: DockerBuild
        configuration:
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: ec2-18-232-118-117.compute-1.amazonaws.com:8082/docker-local/node 
          dockerImageTag: latest
          integrations:
            - name: art_v
          inputResources:
            - name: ns_dockerbuild_gitRepo 
            - name: connecting_resource


      - name: To_Push_Docker_Image
        type: DockerPush
        configuration:
          autoPublishBuildInfo: false #IMPORTANGT******************* : if this is true then only we need outputResource in DockerPush and no need of publishBuildInfo step
          targetRepository: docker-local #required
          integrations:
            - name: art_v 
          inputSteps:
            - name: To_build_Docker_Image

      - name: To_publish_buildInfo #IMPORTANGT******************* : required if autoPublishBuildInfo is false
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: To_Push_Docker_Image
          outputResources:
            - name: ns_buildInfo

      - name: To_promote_build
        type: PromoteBuild
        configuration:
          targetRepository: test-generic-local
          integrations:
            - name: art_v
          inputResources:
            - name: ns_buildInfo
          inputSteps:
            - name: To_publish_buildInfo
          outputResources:
            - name: ns_promotedInfo
